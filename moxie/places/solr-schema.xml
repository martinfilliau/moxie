<?xml version="1.0" encoding="UTF-8" ?>

<schema name="moxie-places" version="1.5">

    <fields>
        <!-- Fields below are mandatory for every document -->

        <!-- e.g. ID: osm:1938450 TODO: be able to search by part of ID? like naptan code-->
        <field name="identifiers" type="string" indexed="true" stored="true" required="true" multiValued="true" />

        <!-- Tags eg. ['food', 'cafe', 'coffee'] -->
        <field name="tags" type="string" indexed="true" stored="true" required="false" multiValued="true" />

        <!-- Unique ID - Generated UUID by Solr, if not provided then generated as using "NEW" -->
        <field name="id" type="uuid" indexed="true" stored="true"/>

        <!-- Basic field to store opening hours -->
        <field name="opening_hours" type="string" indexed="false" stored="true" required="false" />

        <!-- Precedence - int proportional to the reliability of the importer which set the value -->
        <field name="meta_precedence" type="int" indexed="false" stored="true" required="true" multiValued="false" />

        <!-- e.g. "Oxford University Computing Services" -->
        <field name="name" type="text_en_splitting" indexed="true" stored="true" required="true" />

        <!-- Unique ID of parent(s) of the present document -->
        <field name="child_of" type="uuid" indexed="true" stored="true" multiValued="true" />

        <!-- Unique ID of children of the present document -->
        <field name="parent_of" type="uuid" indexed="true" stored="true" multiValued="true" />

        <!-- Full Text Search for tags and name of document -->
        <field name="fts" type="text_en_splitting" indexed="true" stored="false" multiValued="true"/>

        <!-- location - can't be multiValued atm, see fieldType -->
        <field name="location" type="location" indexed="true" stored="true" required="true" multiValued="false" />
        <dynamicField name="*_coordinate" type="tdouble" indexed="true" stored="false" />

        <!-- all other fields are stored as string atm -->
        <dynamicField name="raw_*" type="string" indexed="false" stored="true" multiValued="true" />
    </fields>

    <!-- UniqueKey is not mandatory (except if we want the QueryElevation component (which allows
         to alter top results if we want to return custom... results)), but it would be nice to have to
         enforce the fact that one document, and only one, should have this ID (no duplicate), unfortunately, it
         doesn't work (atm?) with multiValued=true...
    <uniqueKey>id</uniqueKey>
    -->
    <!-- Actually, we need it for updating documents, below is a temporary solution... -->
    <uniqueKey>id</uniqueKey>

    <!-- Copying name and tags for full text search -->
    <copyField source="name" dest="fts"/>
    <copyField source="tags" dest="fts"/>

    <types>

        <fieldType name="uuid" class="solr.UUIDField" indexed="true" />

        <!-- Simple type that doesn't do any analyze, perfect for IDs... -->
        <fieldType name="string" class="solr.StrField" sortMissingLast="true" />

        <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>

        <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate" />
        <!-- used by dnyamic field "_coordinate" -->
        <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>

        <!-- Solr / Lucene 4, not available with 4.0.0-ALPHA -->
        <!--<fieldType name="geo"
            class="org.apache.solr.spatial.RecursivePrefixTreeFieldType"
            distErrPct="0.025"
            maxDetailDist="0.001"
            />-->


        <!-- A text field with defaults appropriate for English: it
            tokenizes with StandardTokenizer, removes English stop words
            (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
            finally applies Porter's stemming.  The query time analyzer
            also applies synonyms from synonyms.txt. -->
        <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <!-- in this example, we will only use synonyms at query time
                <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                -->
                <!-- Case insensitive stop word removal.
                add enablePositionIncrements=true in both the index and query
                analyzers to leave a 'gap' for more accurate phrase queries.
                -->
                <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
                    enablePositionIncrements="true"
                />
                <filter class="solr.LowerCaseFilterFactory"/>
	            <filter class="solr.EnglishPossessiveFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
	            <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
	            -->
                <filter class="solr.PorterStemFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
                <filter class="solr.StopFilterFactory"
                     ignoreCase="true"
                     words="lang/stopwords_en.txt"
                     enablePositionIncrements="true"
                     />
                <filter class="solr.LowerCaseFilterFactory"/>
	            <filter class="solr.EnglishPossessiveFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
	            <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
	            -->
                <filter class="solr.PorterStemFilterFactory"/>
            </analyzer>
        </fieldType>

            <!-- A text field with defaults appropriate for English, plus
        	 aggressive word-splitting and autophrase features enabled.
        	 This field is just like text_en, except it adds
        	 WordDelimiterFilter to enable splitting and matching of
        	 words on case-change, alpha numeric boundaries, and
        	 non-alphanumeric chars.  This means certain compound word
        	 cases will work, for example query "wi fi" will match
        	 document "WiFi" or "wi-fi".
                -->
            <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
              <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <!-- in this example, we will only use synonyms at query time
                <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                -->
                <!-- Case insensitive stop word removal.
                  add enablePositionIncrements=true in both the index and query
                  analyzers to leave a 'gap' for more accurate phrase queries.
                -->
                <filter class="solr.StopFilterFactory"
                        ignoreCase="true"
                        words="lang/stopwords_en.txt"
                        enablePositionIncrements="true"
                        />
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                <filter class="solr.PorterStemFilterFactory"/>
              </analyzer>
              <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
                <filter class="solr.StopFilterFactory"
                        ignoreCase="true"
                        words="lang/stopwords_en.txt"
                        enablePositionIncrements="true"
                        />
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                <filter class="solr.PorterStemFilterFactory"/>
              </analyzer>
            </fieldType>

    </types>

</schema>
